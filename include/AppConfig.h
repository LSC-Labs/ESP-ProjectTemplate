#pragma once
/**
 * Defines all default settings for the application
 * Specify in the compile settings the necessary overrides "-D ...." switches.alignas
 * ProgVersion.h is generated by the build process and contains the version and the build number
 *
 */
#include <ProgVersion.h>
#include <Msgs.h>
#define APP_AUTHOR      "P. Liebl"
#define APP_DESCRIPTION "ESP-ProjectTemplate."
#define APP_COPYRIGHT   "2025" 

#include <ConfigHandler.h>
#include <StatusHandler.h>
#include <EventHandler.h>

/// File to store the configuration
/// Do NOT use the F("") Macro - LittleFS gets in trouble ! (Exception 3)
#ifndef CONFIG_FILE
    #define CONFIG_FILE "/config.json"
#endif


#define APP_NAME        PROG_VERSION_NAME
// Debug Version has an attached "-D" to the version number
#ifdef DEBUGVERSION
    #define APP_VERSION PROG_VERSION_LONG"-D"
    #pragma warn "You are compiling the DEBUG Version : " APP_VERSION
#else
    #define APP_VERSION     PROG_VERSION_LONG
#endif

#define MSG_SENSOR_STATUS       (MSG_USER_BASE + 20)
#define MSG_OPEN_WEATHER_DATA   (MSG_USER_BASE + 10)

#define SENSOR_INDOOR       1
#define SENSOR_OUTDOOR      2
#define USE_OPEN_WEATHER   99

struct AppConfig {
    float minActivationLevelIntern =  10.0; // Min internal temp to activate
    float minActivationLevelExtern = -10.0; // Min external temp to activate
    float dewPointActivationDelta  =   5.0; // Dewpoint activation Delta between intern/extern
    float activationHysteresis     =   1.0; // Hysteresis / Switch threshold temp
};

struct AppStatus {
    bool ActiveVentilation = false; // Ventilation is needed and activ
    bool isInErrorState    = false; // If a sensor is in error, the flag is true.
    String internalErrorMsg = "";
    String externalErrorMsg = "";
};

